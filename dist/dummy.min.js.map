{"version":3,"sources":["dummy.min.js"],"names":["_interopRequireDefault","obj","__esModule","default","global","randomInteger","min","arguments","length","undefined","max","Math","floor","random","randomElement","array","sentenceCase","string","firstLetter","charAt","toUpperCase","rest","slice","initialize","elements","document","querySelectorAll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","element","value","config","parseConfig","getAttribute","innerText","generate","err","return","segments","split","count","type","words","i","dictionary","trim","sentences","_i","paragraphs","_i2","console","error","onload","_gulp","require","_gulp2","_gulpBabel","_gulpBabel2","_gulpConcat","_gulpConcat2","_gulpUglify","_gulpUglify2","_gulpSourcemaps","_gulpSourcemaps2","_gulpPrettier","_gulpPrettier2","task","src","pipe","presets","init","compress","negate_iife","outSourceMaps","write","dest","watch","singleQuote","tabWidth","arrowParens","trailingComma","semi"],"mappings":"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","file":"dummy.min.js","sourcesContent":["'use strict';\n\n(function (global) {\n    ///////////////\n    // Constants //\n    ///////////////\n    var dictionary = 'lorem,ipsum,dolor,sit,amet,consectetur,adipiscing,elit,proin,accumsan,lacus,ut,tristique,ante,est,vehicula,risus,eget,ornare,tortor,libero,sed,donec,porttitor,felis,non,massa,vestibulum,maecenas,urna,pretium,sodales,in,semper,a,leo,morbi,luctus,nisl,id,eleifend,lacinia,quam,orci,consequat,neque,dui,eu,nullam,condimentum,nibh,pulvinar,at,sem,viverra,auctor,mauris,euismod,vulputate,pharetra,suspendisse,quis,bibendum,eros,duis,egestas,venenatis,volutpat,magna,convallis,vivamus,maximus,malesuada,aliquam,ultricies,nisi,laoreet,interdum,turpis,vel,sagittis,ullamcorper,ultrices,velit,placerat,mollis,suscipit,diam,ligula,cursus,scelerisque,porta,vitae,lectus,primis,faucibus,et,posuere,cubilia,curae,sollicitudin,tincidunt,justo,ac,aenean,purus,arcu,finibus,facilisis,varius,dignissim,dapibus,congue,gravida,etiam,mi,cras,molestie,fusce,nunc,blandit,tempus,quisque,aliquet,sapien,erat,fringilla,nam,mattis,nec,rutrum,pellentesque,iaculis,ex,hendrerit,tellus,dictum,odio,praesent,elementum,metus,enim,nulla,augue,feugiat,efficitur,commodo,rhoncus,imperdiet,lobortis,integer,curabitur,phasellus,fames,aptent,taciti,sociosqu,ad,litora,torquent,per,conubia,nostra,inceptos,himenaeos,fermentum'.split(',');\n\n    //////////////////////\n    // Helper Functions //\n    //////////////////////\n    function randomInteger() {\n        var min = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n        var max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    function randomElement(array) {\n        return array[randomInteger(array.length)];\n    }\n\n    function sentenceCase(string) {\n        var firstLetter = string.charAt(0).toUpperCase();\n        var rest = string.slice(1);\n        return '' + firstLetter + rest;\n    }\n\n    ////////////////\n    // Real Stuff //\n    ////////////////\n    function initialize() {\n        var elements = document.querySelectorAll('[data-dummy]');\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = elements[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var element = _step.value;\n\n                var config = parseConfig(element.getAttribute('data-dummy'));\n                element.innerText = generate(config);\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n    }\n\n    function parseConfig(config) {\n        var segments = config.split(' ');\n\n        return { count: segments[0], type: segments[1] };\n    }\n\n    function generate(config) {\n        switch (config.type) {\n            case 'word':\n            case 'words':\n                var words = '';\n\n                for (var i = 0; i < config.count; i++) {\n                    words += randomElement(dictionary) + ' ';\n                }\n\n                return sentenceCase(words.trim());\n            case 'sentence':\n            case 'sentences':\n                var sentences = '';\n\n                for (var _i = 0; _i < config.count; _i++) {\n                    sentences += sentenceCase(generate({\n                        count: randomInteger(5, 12),\n                        type: 'words'\n                    }));\n\n                    sentences += '. ';\n                }\n\n                return sentences;\n            case 'paragraph':\n            case 'paragraphs':\n                var paragraphs = '';\n\n                for (var _i2 = 0; _i2 < config.count; _i2++) {\n                    paragraphs += generate({\n                        count: randomInteger(8, 14),\n                        type: 'sentences'\n                    });\n\n                    paragraphs += '\\n';\n                }\n\n                return paragraphs;\n            default:\n                console.error('Error: Invalid dummy fill type \\'' + config.type + '\\'');\n\n                return '';\n        }\n    }\n\n    global.onload = initialize;\n})(undefined);\n'use strict';\n\nvar _gulp = require('gulp');\n\nvar _gulp2 = _interopRequireDefault(_gulp);\n\nvar _gulpBabel = require('gulp-babel');\n\nvar _gulpBabel2 = _interopRequireDefault(_gulpBabel);\n\nvar _gulpConcat = require('gulp-concat');\n\nvar _gulpConcat2 = _interopRequireDefault(_gulpConcat);\n\nvar _gulpUglify = require('gulp-uglify');\n\nvar _gulpUglify2 = _interopRequireDefault(_gulpUglify);\n\nvar _gulpSourcemaps = require('gulp-sourcemaps');\n\nvar _gulpSourcemaps2 = _interopRequireDefault(_gulpSourcemaps);\n\nvar _gulpPrettier = require('gulp-prettier');\n\nvar _gulpPrettier2 = _interopRequireDefault(_gulpPrettier);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_gulp2.default.task('compile', function () {\n    return _gulp2.default.src(['src/**/*.js']).pipe((0, _gulpBabel2.default)({ presets: ['env'] })).pipe((0, _gulpConcat2.default)('dummy.min.js')).pipe(_gulpSourcemaps2.default.init()).pipe((0, _gulpUglify2.default)({ compress: { negate_iife: false }, outSourceMaps: true })).pipe(_gulpSourcemaps2.default.write('./')).pipe(_gulp2.default.dest('dist'));\n});\n\n_gulp2.default.task('watch', function () {\n    _gulp2.default.watch(['./src/**/*.*'], ['pretty', 'compile']);\n});\n\n_gulp2.default.task('pretty', function () {\n    return _gulp2.default.src(['src/**/*.js', 'gulpfile.babel.js']).pipe((0, _gulpPrettier2.default)({\n        'singleQuote': true,\n        'tabWidth': 4,\n        'arrowParens': 'always',\n        'trailingComma': 'none',\n        'semi': true\n    })).pipe(_gulp2.default.dest('src'));\n});\n\n_gulp2.default.task('default', ['compile', 'pretty']);"]}